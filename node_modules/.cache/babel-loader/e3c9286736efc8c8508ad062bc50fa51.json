{"ast":null,"code":"var _jsxFileName = \"/Users/tiffanyzhong/swe-website/src/components/pages/corporate_info.js\";\nimport React, { Component } from 'react';\nimport Button from 'react-bootstrap/Button';\nimport '../../default.css';\nimport Accordion from 'react-bootstrap/Accordion';\nimport { useAccordionToggle } from 'react-bootstrap/AccordionToggle';\nimport Card from 'react-bootstrap/Card';\n\nclass InformationSession extends Component {\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 11\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"container-fluid faq\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 12\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"row subtitle\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 13\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      className: \"row-heading\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 14\n      },\n      __self: this\n    }, \"Host an Information Session\"), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16\n      },\n      __self: this\n    }, \"The Cornell Society of Women Engineers plans, coordinates, and advertises interactive sessions for Cornell Engineering students to meet with visiting corporations. These sessions provide students with opportunites to meet company representatives in an informal setting and are avenues for companies to recruit students for permanent and internship positions, increasing company recognition among students. They are open to all students on campus.\")))), React.createElement(\"div\", {\n      className: \"container-fluid\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      id: \"secondParagraph\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26\n      },\n      __self: this\n    }, \" For those interested in hosting information sessions, please see our\", React.createElement(\"strong\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    }, \" Company Recruiter Brochure\"), \"and our\", React.createElement(\"strong\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    }, \" FAQ\"), \". To host an information session, please click on the following button. For questions regarding company informations, please contact the Corporate Relations directors at cornell.swe.cr@gmail.com. The SWE office is located at 162 Olin Hall, Ithaca, NY 14853.\"), React.createElement(\"div\", {\n      id: \"host_button\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }, React.createElement(Button, {\n      variant: \"secondary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }, \"Host an Information Session\"), ' ')), React.createElement(\"div\", {\n      className: \"content\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }, React.createElement(Accordion, {\n      defaultActiveKey: \"0\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }, React.createElement(Card, {\n      bg: 'dark',\n      text: 'dark' === 'light' ? 'dark' : 'white',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, React.createElement(Accordion.Toggle, {\n      as: Card.Header,\n      eventKey: \"0\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, React.createElement(\"b\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, \"When are the best times to hold an info session?\")), React.createElement(Accordion.Collapse, {\n      eventKey: \"0\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, React.createElement(Card.Body, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, \"Classes officially end at 4:25pm each day. Career Services would like to standardize session times, and so we will be offering sessions at 4:30pm, 6:00pm, and 7:30pm. For engineers, Tuesday and Thursday  evenings are preliminary (midterm) exam nights. To avoid possible conflicts, please see the fall preliminary exam schedule or fall final exam schedule. Exams for the following courses are large lectures and tend to be busy times for engineers: MATH 1910, 1920, 2930, 2940, PHYS 1112, 2213, 2214, CHEM 2090, CS courses, ENGRD courses, and ENGRI courses.\"))), React.createElement(Card, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, React.createElement(Accordion.Toggle, {\n      as: Card.Header,\n      eventKey: \"1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, React.createElement(\"b\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, \"How do I gauge the anticipated attendance at a session?\")), React.createElement(Accordion.Collapse, {\n      eventKey: \"1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, React.createElement(Card.Body, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, \"Although we can provide you with a number, we feel that it is better for companies to anticipate their attendance as you will know best what your turnout would be. The average number of students is typically 30. The base prices for the refreshment options are determined by this average number.\"))), React.createElement(Card, {\n      bg: 'dark',\n      text: 'dark' === 'light' ? 'dark' : 'white',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, React.createElement(Accordion.Toggle, {\n      as: Card.Header,\n      eventKey: \"2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, React.createElement(\"b\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, \"When is the latest I can cancel?\")), React.createElement(Accordion.Collapse, {\n      eventKey: \"2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, React.createElement(Card.Body, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, \"One week prior notice to SWE Corporate Relations Directors (cornell.swe.cr@gmail.com) is required for cancellations. Cancellations made 7 days or less than the date of the session will result in a charge of half of the base price of a session. Less than 24 hours notice will result in a charge for the full price of the session. If you cancel at least 7 days prior to your scheduled info session, you will be fully refunded.\"))), React.createElement(Card, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, React.createElement(Accordion.Toggle, {\n      as: Card.Header,\n      eventKey: \"3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, React.createElement(\"b\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, \"Why did my room reservation change from what was confirmed?\")), React.createElement(Accordion.Collapse, {\n      eventKey: \"3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, React.createElement(Card.Body, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, \"Professors who make requests for academic purposes have priority over any other type of reservation. If such an event happens, we will find the next available location in closest proximity to the original reservation. We will send out emails and announcements to students about the location change. Additionally, we will post signs and have a liaison to redirect students to your new session location the day of your session.\"))), React.createElement(Card, {\n      bg: 'dark',\n      text: 'dark' === 'light' ? 'dark' : 'white',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, React.createElement(Accordion.Toggle, {\n      as: Card.Header,\n      eventKey: \"4\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }, React.createElement(\"b\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }, \"Can I opt to have a closed session for selected interviewees only?\")), React.createElement(Accordion.Collapse, {\n      eventKey: \"4\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }, React.createElement(Card.Body, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }, \"Yes, you can choose to not advertise your session to the general campus community. We will notify Engineering Career Services of your request and they will notify only the list of interviewees. \"))), React.createElement(Card, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }, React.createElement(Accordion.Toggle, {\n      as: Card.Header,\n      eventKey: \"5\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }, React.createElement(\"b\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }, \"When is payment due?\")), React.createElement(Accordion.Collapse, {\n      eventKey: \"5\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }, React.createElement(Card.Body, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }, \"Payment is due one to two weeks after an info session. \"))), React.createElement(Card, {\n      bg: 'dark',\n      text: 'dark' === 'light' ? 'dark' : 'white',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }, React.createElement(Accordion.Toggle, {\n      as: Card.Header,\n      eventKey: \"6\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    }, React.createElement(\"b\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    }, \"How do I pay?\")), React.createElement(Accordion.Collapse, {\n      eventKey: \"6\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    }, React.createElement(Card.Body, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121\n      },\n      __self: this\n    }, \" Please write a check payable to the Cornell Society of Women Engineers and send to: \"), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    }, \"     \", React.createElement(\"span\", {\n      className: \"address\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    }, \"Diversity Programs in Engineering\", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    }), \"C/O Cornell Society of Women Engineers\", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    }), \"146 Olin Hall, Cornell University\", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    }), \"Ithaca, NY 14853. \", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126\n      },\n      __self: this\n    }))), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129\n      },\n      __self: this\n    }, \" Please specify that the check is for an information session. You may also pay via credit card with our online payment option. For tax and federal ID, please email SWE Corporate Relations Directors(cornell.swe.cr@gmail.com). \")))), React.createElement(Card, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135\n      },\n      __self: this\n    }, React.createElement(Accordion.Toggle, {\n      as: Card.Header,\n      eventKey: \"7\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136\n      },\n      __self: this\n    }, React.createElement(\"b\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137\n      },\n      __self: this\n    }, \"How soon can I expect a confirmation after I submit my request?\")), React.createElement(Accordion.Collapse, {\n      eventKey: \"7\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139\n      },\n      __self: this\n    }, React.createElement(Card.Body, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140\n      },\n      __self: this\n    }, \"Within a week. We will work on getting your request processed as soon as possible. Turnaround time can be as early as 24 hours. \"))), React.createElement(Card, {\n      bg: 'dark',\n      text: 'dark' === 'light' ? 'dark' : 'white',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144\n      },\n      __self: this\n    }, React.createElement(Accordion.Toggle, {\n      as: Card.Header,\n      eventKey: \"8\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148\n      },\n      __self: this\n    }, React.createElement(\"b\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149\n      },\n      __self: this\n    }, \"When is the latest I can request to coordinate an information session with SWE?\")), React.createElement(Accordion.Collapse, {\n      eventKey: \"8\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151\n      },\n      __self: this\n    }, React.createElement(Card.Body, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152\n      },\n      __self: this\n    }, \"In order for SWE to provide the highest quality service, all session details must be finalized at least one week prior to the desired date. Ordering food and reserving a room is never a problem, however, it does take one week for room requests to be processed and confirmed. At least a week is necessary to properly publicize an information session and ensure the session has sufficient number of liaisons and volunteers. Since session details may take several days to finalize - especially if you have any questions about the session options - we recommend that session requests are made at least 14 days prior to the desired date. \"))), React.createElement(Card, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160\n      },\n      __self: this\n    }, React.createElement(Accordion.Toggle, {\n      as: Card.Header,\n      eventKey: \"9\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161\n      },\n      __self: this\n    }, React.createElement(\"b\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162\n      },\n      __self: this\n    }, \"I am interested in the Professional Networking Dinner, how can I register for that?\")), React.createElement(Accordion.Collapse, {\n      eventKey: \"9\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164\n      },\n      __self: this\n    }, React.createElement(Card.Body, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165\n      },\n      __self: this\n    }, \"SWE proudly presents our semiannual Professional Networking Dinner. Registration starts about 4-5 months before the Dinner. For more information and to sign up please visit our Professional Networking Dinner page. If you have any questions about this event, please email cornellswe.pnd@gmail.com. \"))))));\n  }\n\n}\n\nexport default InformationSession;","map":{"version":3,"sources":["/Users/tiffanyzhong/swe-website/src/components/pages/corporate_info.js"],"names":["React","Component","Button","Accordion","useAccordionToggle","Card","InformationSession","render","Header"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport Button from 'react-bootstrap/Button'\nimport '../../default.css';\nimport Accordion from 'react-bootstrap/Accordion';\nimport { useAccordionToggle } from 'react-bootstrap/AccordionToggle';\nimport Card from 'react-bootstrap/Card'\n\nclass InformationSession extends Component {\n    render() {\n        return (\n            <div>\n                <div className=\"container-fluid faq\">\n                    <div className=\"row subtitle\">\n                        <h1 className=\"row-heading\">Host an Information Session</h1>\n                        <div>\n                            <p>The Cornell Society of Women Engineers plans, coordinates, and advertises\n                            interactive sessions for Cornell Engineering students to meet with visiting corporations.\n                            These sessions provide students with opportunites to meet company representatives in an \n                            informal setting and are avenues for companies to recruit students for permanent and \n                            internship positions, increasing company recognition among students. They are open to \n                            all students on campus.</p>\n                        </div>\n                    </div>\n                </div>\n                <div className=\"container-fluid\">\n                            <p id=\"secondParagraph\"> For those interested in hosting information sessions, please see our \n                            <strong> Company Recruiter Brochure</strong> \n                            and our\n                            <strong> FAQ</strong>.\n                            To host an information session, please click on the following button.\n                            For questions regarding company informations, please contact the Corporate Relations\n                            directors at cornell.swe.cr@gmail.com. The SWE office is located at 162 Olin Hall, Ithaca, NY 14853.</p>\n                            <div id=\"host_button\">\n                                <Button variant=\"secondary\">Host an Information Session</Button>{' '}\n                            </div>\n                </div>\n                <div className=\"content\">\n                        <Accordion defaultActiveKey=\"0\">\n                            <Card\n                                bg={'dark'}\n                                text={'dark' === 'light' ? 'dark' : 'white'}\n                            >\n                                <Accordion.Toggle as={Card.Header} eventKey=\"0\">\n                                    <b>When are the best times to hold an info session?</b>\n                                </Accordion.Toggle>\n                                <Accordion.Collapse eventKey=\"0\">\n                                <Card.Body>Classes officially end at 4:25pm each day. Career Services would like to standardize\n                                session times, and so we will be offering sessions at 4:30pm, 6:00pm, and 7:30pm.\n                                For engineers, Tuesday and Thursday  evenings are preliminary (midterm) exam nights.\n                                To avoid possible conflicts, please see the fall preliminary exam schedule\n                                or fall final exam schedule. Exams for the following courses are large lectures\n                                and tend to be busy times for engineers: MATH 1910, 1920, 2930, 2940, PHYS 1112, 2213, 2214,\n                                CHEM 2090, CS courses, ENGRD courses, and ENGRI courses.</Card.Body>\n                                </Accordion.Collapse>\n                            </Card>\n                            <Card>\n                                <Accordion.Toggle as={Card.Header} eventKey=\"1\">\n                                    <b>How do I gauge the anticipated attendance at a session?</b>\n                                </Accordion.Toggle>\n                                <Accordion.Collapse eventKey=\"1\">\n                                <Card.Body>Although we can provide you with a number, we feel that it is better for companies\n                                to anticipate their attendance as you will know best what your turnout would be. The average number of students\n                                is typically 30. The base prices for the refreshment options are determined by this average number.</Card.Body>\n                                </Accordion.Collapse>\n                            </Card>\n                            <Card\n                                bg={'dark'}\n                                text={'dark' === 'light' ? 'dark' : 'white'}\n                            >\n                                <Accordion.Toggle as={Card.Header} eventKey=\"2\">\n                                    <b>When is the latest I can cancel?</b>\n                                </Accordion.Toggle>\n                                <Accordion.Collapse eventKey=\"2\">\n                                <Card.Body>One week prior notice to SWE Corporate Relations Directors (cornell.swe.cr@gmail.com)\n                                is required for cancellations. Cancellations made 7 days or less than the date of the session will\n                                result in a charge of half of the base price of a session. Less than 24 hours notice will result\n                                in a charge for the full price of the session. If you cancel at least 7 days prior to your\n                                scheduled info session, you will be fully refunded.</Card.Body>\n                                </Accordion.Collapse>\n                            </Card>\n                            <Card>\n                                <Accordion.Toggle as={Card.Header} eventKey=\"3\">\n                                    <b>Why did my room reservation change from what was confirmed?</b>\n                                </Accordion.Toggle>\n                                <Accordion.Collapse eventKey=\"3\">\n                                <Card.Body>Professors who make requests for academic purposes have priority over any other type of reservation. \n                                If such an event happens, we will find the next available location in closest proximity to the original \n                                reservation. We will send out emails and announcements to students about the location change. Additionally, \n                                we will post signs and have a liaison to redirect students to your new session location the day of your session.</Card.Body>\n                                </Accordion.Collapse>\n                            </Card>\n                            <Card\n                                bg={'dark'}\n                                text={'dark' === 'light' ? 'dark' : 'white'}\n                            >\n                                <Accordion.Toggle as={Card.Header} eventKey=\"4\">\n                                    <b>Can I opt to have a closed session for selected interviewees only?</b>\n                                </Accordion.Toggle>\n                                <Accordion.Collapse eventKey=\"4\">\n                                <Card.Body>Yes, you can choose to not advertise your session to the general campus community. We will notify \n                                Engineering Career Services of your request and they will notify only the list of interviewees. </Card.Body>\n                                </Accordion.Collapse>\n                            </Card>\n                            <Card>\n                                <Accordion.Toggle as={Card.Header} eventKey=\"5\">\n                                    <b>When is payment due?</b>\n                                </Accordion.Toggle>\n                                <Accordion.Collapse eventKey=\"5\">\n                                <Card.Body>Payment is due one to two weeks after an info session. </Card.Body>\n                                </Accordion.Collapse>\n                            </Card>\n                            <Card\n                                bg={'dark'}\n                                text={'dark' === 'light' ? 'dark' : 'white'}\n                            >\n                                <Accordion.Toggle as={Card.Header} eventKey=\"6\">\n                                    <b>How do I pay?</b>\n                                </Accordion.Toggle>\n                                <Accordion.Collapse eventKey=\"6\">\n                                <Card.Body>\n                                <p> Please write a check payable to the Cornell Society of Women Engineers and send to: </p>\n                                    <p>     <span className=\"address\">\n                                            Diversity Programs in Engineering<br/>\n                                            C/O Cornell Society of Women Engineers<br/>\n                                            146 Olin Hall, Cornell University<br/>\n                                            Ithaca, NY 14853. <br/>\n                                            </span>\n                                    </p>   \n                                <p> Please specify that the check is for an information session. You may also pay via credit card \n                                with our online payment option. For tax and federal ID, please email SWE Corporate Relations \n                                Directors(cornell.swe.cr@gmail.com). </p>\n                                    </Card.Body>\n                                </Accordion.Collapse>\n                            </Card>\n                            <Card>\n                                <Accordion.Toggle as={Card.Header} eventKey=\"7\">\n                                    <b>How soon can I expect a confirmation after I submit my request?</b>\n                                </Accordion.Toggle>\n                                <Accordion.Collapse eventKey=\"7\">\n                                <Card.Body>Within a week. We will work on getting your request processed as soon as possible. \n                                Turnaround time can be as early as 24 hours. </Card.Body>\n                                </Accordion.Collapse>\n                            </Card>\n                            <Card\n                                bg={'dark'}\n                                text={'dark' === 'light' ? 'dark' : 'white'}\n                            >\n                                <Accordion.Toggle as={Card.Header} eventKey=\"8\">\n                                    <b>When is the latest I can request to coordinate an information session with SWE?</b>\n                                </Accordion.Toggle>\n                                <Accordion.Collapse eventKey=\"8\">\n                                <Card.Body>In order for SWE to provide the highest quality service, all session details must be finalized at least \n                                    one week prior to the desired date. Ordering food and reserving a room is never a problem, however, it does\n                                    take one week for room requests to be processed and confirmed. At least a week is necessary to properly \n                                    publicize an information session and ensure the session has sufficient number of liaisons and volunteers. \n                                    Since session details may take several days to finalize - especially if you have any questions about the \n                                    session options - we recommend that session requests are made at least 14 days prior to the desired date. </Card.Body>\n                                </Accordion.Collapse>\n                            </Card>\n                            <Card>\n                                <Accordion.Toggle as={Card.Header} eventKey=\"9\">\n                                    <b>I am interested in the Professional Networking Dinner, how can I register for that?</b>\n                                </Accordion.Toggle>\n                                <Accordion.Collapse eventKey=\"9\">\n                                <Card.Body>SWE proudly presents our semiannual Professional Networking Dinner. Registration starts about 4-5 months \n                                before the Dinner. For more information and to sign up please visit our Professional Networking Dinner page.\n                                If you have any questions about this event, please email cornellswe.pnd@gmail.com. </Card.Body>\n                                </Accordion.Collapse>\n                            </Card>\n                        </Accordion>\n                    </div> \n\n                \n            </div>\n        );\n    }\n}\n\nexport default InformationSession;\n"]},"metadata":{},"sourceType":"module"}